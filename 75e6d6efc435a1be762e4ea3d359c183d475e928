{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_5b4b5f59",
        "filename": "ueb-listener/src/main/java/org/onap/ccsdk/sli/northbound/uebclient/SdncUebCallback.java",
        "patchSetId": 1
      },
      "lineNbr": 884,
      "author": {
        "id": 667
      },
      "writtenOn": "2017-12-20T17:39:19Z",
      "side": 1,
      "message": "Seems reasonable to me.",
      "revId": "75e6d6efc435a1be762e4ea3d359c183d475e928",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bb3e23b7",
        "filename": "ueb-listener/src/main/java/org/onap/ccsdk/sli/northbound/uebclient/SdncUebClient.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 667
      },
      "writtenOn": "2017-12-20T17:39:19Z",
      "side": 1,
      "message": "This seems superfluous to me. If you are going to cast explicitly to long (code readability sake?, maybe bit more safety), you should also cast config.getClientStartupTimeout() value as it returns an int: public int getClientStartupTimeout()",
      "range": {
        "startLine": 54,
        "startChar": 53,
        "endLine": 54,
        "endChar": 60
      },
      "revId": "75e6d6efc435a1be762e4ea3d359c183d475e928",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7b5f3b0f",
        "filename": "ueb-listener/src/main/java/org/onap/ccsdk/sli/northbound/uebclient/SdncUebClient.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 87
      },
      "writtenOn": "2017-12-20T20:51:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a93c517_bb3e23b7",
      "range": {
        "startLine": 54,
        "startChar": 53,
        "endLine": 54,
        "endChar": 60
      },
      "revId": "75e6d6efc435a1be762e4ea3d359c183d475e928",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}